'use strict'; // Означает, что мы пишем в стандарте ES6 и некоторые "ошибки прошлого" работать не станут.
// Его можно ставить и в отдельные функции.
// Единственное у него могут быть проблемы с =< IE9, но это можно исправить.

a = 5;
console.log(a); // Выдаст ошибку.

// Имя переменной может состоять только из букв, цифр, символов доллара, нижнего подчёркивания и первый символ не должен быть цифрой.
// Названия переменных не должны повторять зарезервированные слова в языке. (error, alert, promt, alert etc.)
console.log(leftBorderWidth);

var leftBorderWidth = 1; // Если var объявлена, то она уже существует в кода, ещё до выполнения скрипта.

console.log(leftBorderWidth);

// console.log(second);

let second = 2; // Создаётся только тогда, когда код до неё доходит. Такое понятие называют hosting или всплытие перемен. Позволяет нам избежать многих ошибок, а также таким образом мы ускоряем код, т.к. теперь браузер не должен хранить все переменые var, а использует let, которые создаются в момент использования. Таким образом код работает быстрее и экономит память браузера.

console.log(second);

// Кроме этого let видна только в блоке кода, ограниченного {}.
{
  let fourth = 4;
}

console.log(fourth);
// console.log(PI);

const PI = 3.14; // Создают константу, которую нельзя поменять. Однако обходными путями всё же поменять можно.

console.log(PI);

/* ТИПЫ ДАННЫХ */

// Числа. Могут быть как целыми, так и дробными. Ещё существую специальные числовые значения: infinity (получается например при делении на 0), либо NaN [not a number], например когда мы проводим операцию, которая не подлежит математической логике, например деления числа на строку.
let number = 7;

console.log(number / 0);
console.log('hello' * 8);

// Строки. Оформляется с помощью "Hello", 'Hallo', `Привет всем`.
let string = 'Hello!';

// Символ. На практике используется довольно редко.
let sym = Symbol();

// Логический. Либо да [true], либо нет [false].
let boolean = true;

// null — это когда чего-то в коде просто не существует. Или ссылка на несуществующую вещь.
null;

console.log(something);

// undefined — это когда какой либо объект уже существует, но значения никакого не имеет.
undefined;

let someVar;

console.log(someVar);

// Объект. Это коллекция данных, структура, которая используется для хранения любых данных. Называется комплексным, т.к. в нём могут содержаться все вышеперечисленные типы данных. В {} содержит данные, которые называются свойством или методом объекта. Методы это функции.
let obj = {};

let person = {
  name: 'Al',
  gender: 'male',
  age: 35,
  occupation: 'Freelancer Web-Developer',
  isMarried: true,
};

// Чтобы получить доступ к определённому свойству объекта, например получить профессию человека.
console.log(person.occupation);
// Либо альтернативо таким способом, когда например очень большое название.
console.log(person['gender']);

// Разновидность объектов — массив.
let array = ['Alex', 'Al', 'Jack', 'John', 15, true, 16.1];

console.log(array[0]);
