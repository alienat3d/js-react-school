const classesFunc = () => {
  // 1.0 Прежде, чем создавать наш шаблон рассмотрим нашу вёрстку, что нам необходимо для карточки товара: src для картинки, также alt для неё, название title, текст описания, и цена.
  // 1.1.0 Также запишем и метод конвертации валют, т.к. предполагается, что в будущем в нашей БД цена будет указана в $, а нам нужно в ₽.
  // 1.1.1 Итак, когда наш экземпляр будет создан, то нам из БД будет переданно какое-то число, которое отображает цену в $ и перед тем, как её отрисовать на странице её нужно будет конвертировать в ₽. Для этого нам нужен курс валют exchangeRate. В будущем можно сделать, чтобы он приходил динамически, но пока запишем статическое значение.
  // 1.1.2 Далее вызываем этот метод внутри конструктора, чтобы цена конвертировалась автоматически.
  // 1.2 Создаём в методе render() элемент, в который помещаем вёрстку карточки, дополненную теми данными, что приходят как аргументы и поместить этот элемент на страницу.
  // 1.3.0 Также нам нужно будет помещать элемент куда-то на страницу, а значит нужно получить родителя, например с классом ".container" (или другого). Для этого добавим ещё один аргумент "parentSelector".
  // 1.3.1 Соответственно нужно будет получить элемент со страницы куда будем пушать этот элемент. Мы добавим его в конструкторе, хотя сделать это можно было и в render(), но разницы особой нет. И через метод querySelector() получим его. Теперь у нас будет в свойстве parent лежать конкретный DOM-элемент родителя, в который будет помещаться наш экземпляр-элемент.
  // 1.3.2 С помощью append() помещаем наш новый элемент внутрь родительского.
  class MenuCard {
    constructor(src, alt, title, descr, price, parentSelector) {
      this.src = src;
      this.alt = alt;
      this.title = title;
      this.descr = descr;
      this.price = price;
      this.parent = document.querySelector(parentSelector);
      this.RURexchangeRate = 98;
      this.convertToRUR();
    }

    convertToRUR() {
      this.price = +this.price * this.RURexchangeRate;
    }
    // * [1.2] *
    render() {
      const element = document.createElement('div');
      element.innerHTML = `
        <div class="menu__item">
          <img src=${this.src} alt=${this.alt}>
          <h3 class="menu__item-subtitle">${this.title}</h3>
          <div class="menu__item-descr">${this.descr}</div>
          <div class="menu__item-divider"></div>
          <div class="menu__item-price">
            <div class="menu__item-cost">Цена:</div>
            <div class="menu__item-total">
              <span>${this.price}</span> ₽/день
            </div>
          </div>
        </div>
      `;
      this.parent.append(element);
    }
  }
  // 1.4.0 Итак, теперь, когда шаблон готом, можно приступить к созданию элементов. Можно было бы делать, как в предыдущем уроке по классам:
  /*   const div = new MenuCard();
  div.render(); */
  // 1.4.1 Однако, если мы хотим использовать что-то лишь один раз, то мы могли бы использовать следующий синтаксис. Таким образом он сработает раз и тут же удалится (на него нет ссылок), т.к. мы не присваиваем его никакой переменной.
  // 1.4.2 Далее передаём аргументы, как и прежде в уроке про классы. Т.к. здесь аргументов много, то отформатируем для лучшей читабельности на несколько строк.
  // ? 1.4.3 Здесь особое внимание ссылки на картинки и alt-атрибуты передаём прямо с "", ибо так правильнее.
  new MenuCard(
    'img/tabs/vegy.jpg',
    'vegy',
    'Меню “Фитнес”',
    'Меню “Фитнес” - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',
    7.5,
    '.menu .container'
  ).render();
  // 1.5 Создадим ещё две подобные карточки:
  new MenuCard(
    'img/tabs/elite.jpg',
    'elite',
    'Меню “Премиум”',
    'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',
    15,
    '.menu .container'
  ).render();
  new MenuCard(
    'img/tabs/post.jpg',
    'post',
    'Меню “Постное”',
    'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',
    11,
    '.menu .container'
  ).render();
};

export default classesFunc;
