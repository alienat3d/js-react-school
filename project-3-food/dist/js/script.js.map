{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./src/js/modules/modal.js","webpack:///./src/js/modules/tabs.js","webpack:///./src/js/modules/timer.js"],"names":["tabsFunc","timerFunc","modalFunc","modalTriggers","document","querySelectorAll","modal","querySelector","modalCloseButton","closingModal","classList","add","remove","body","style","overflow","openingModal","clearInterval","modalTimerID","forEach","trigger","addEventListener","evt","target","code","contains","setTimeout","showModalByScroll","window","pageYOffset","documentElement","clientHeight","scrollHeight","removeEventListener","tabs","tabsContent","tabsParent","hideTabContent","content","tab","showTabContent","index","deadline","getTimeRemaining","endTime","days","hours","minutes","seconds","time","Date","parse","Math","floor","total","addZero","num","setTimer","selector","timer","updateTimer","textContent","timeInterval","setInterval"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/main.js\");\n","import tabsFunc from './modules/tabs.js';\r\nimport timerFunc from './modules/timer.js';\r\nimport modalFunc from './modules/modal.js';\r\n\r\ntabsFunc();\r\ntimerFunc();\r\nmodalFunc();","const modalFunc = () => {\r\n  // 1.1 Сперва нам нужно найти в вёрстке триггеры, которые будут вызывать наше модальное окно. Триггеры это такие элементы на странице, которые запускают выполнение какого-то JS кода.\r\n  // 1.2 У них могут быть абсолютно разные классы или даже теги, поэтому частенько, чтобы пометить, что эти элементы у нас вызывают одно и то же действие, им назначаются какие-то определённые data-атрибуты. Например здесь логично будет всем триггером для модального окна дать атрибут \"data-modal\".\r\n  // 1.3 Похожая система будет также и с обратной ситуацией, когда нам нужно будет закрывать модальное окно. Этому элементу повесим data-close.\r\n  const modalTriggers = document.querySelectorAll('[data-modal]'),\r\n    modal = document.querySelector('.modal'),\r\n    modalCloseButton = modal.querySelector('.modal__close');\r\n\r\n  // ? Тут также допустимо использование toggle.\r\n  // 1.5.1 Следуя DRY, мы заметили, что придётся снова повторить кусочек кода для закрытия модального окна, поэтому лучше вынести его в отдельную функцию.\r\n  const closingModal = () => {\r\n    // modal.classList.toggle('show'); // - Вариант с toggle.\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = ''; // Не забываем после закрытие модального окна восстанавливать скролл на странице.\r\n  };\r\n  const openingModal = () => {\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden'; // Чтобы отключать возможность скролла при активном модальном окне.\r\n    // Если модальное окно было открыто пользователем до истечения таймера, то оно больше не открывается по таймеру автоматически, чтобы не раздражать пользователя.\r\n    clearInterval(modalTimerID);\r\n  };\r\n\r\n  modalTriggers.forEach((trigger) =>\r\n    trigger.addEventListener('click', () => openingModal())\r\n  );\r\n  // 1.5.2 Заметим, что здесь мы сократили запись.\r\n  modalCloseButton.addEventListener('click', () => closingModal());\r\n\r\n  // 1.4 Пропишем функционал, чтобы можно было закрывать модальное окно по клику вне самого окна. Внутри проверим, если event.target (куда кликнул пользователь) строго не совпадает с областью модального окна, то мы закрываем окно.\r\n  modal.addEventListener('click', (evt) => {\r\n    if (evt.target === modal) {\r\n      closingModal();\r\n    }\r\n  });\r\n  // ! А вот такой код считается плохой практикой и может не везде работать. К тому же мы нарушаем логику и читабельность кода другими разработчиками:\r\n  /* modal.addEventListener('click', () => {\r\n    if (event.target === modal) {\r\n      modal.classList.add('hide');\r\n      modal.classList.remove('show');\r\n      document.body.style.overflow = '';\r\n    }\r\n  }); */\r\n  // 1.5.1 Также нам нужен функционал, который будет закрывать модальное окно, если на клавиатуре будет нажата клавиша \"Escape\". Здесь нам понадобится событие keydown.\r\n  // 1.5.2 А также продумает такой момент, чтобы браузер реагировал на клавишу Escape и запускал наш код, только когда модальное окно у нас открыто.\r\n  document.addEventListener('keydown', (evt) => {\r\n    if (evt.code === 'Escape' && modal.classList.contains('show')) {\r\n      closingModal();\r\n    }\r\n  });\r\n\r\n  // * 2.1 Представим, что у нас следующая задача - модальное окно должно появляться, когда пользователь долистал страницу до конца или через определённый промежуток времени.\r\n  // 2.2 Это очень частая задача на практике и потому рассмотрим её ниже.\r\n  // 2.3 Поработаем сначала со временем, зададим setTimeout, чтобы модалка вызвалась через, например 10 секунд.\r\n  const modalTimerID = setTimeout(openingModal, 10000);\r\n\r\n  // 2.4 Далее реализуем функционал, что если пользователь доскроллит страницу до конца, то мы покажем ему модальное окно. Вспомним те метрики, что мы изучили в \"4-10-document-and-window\", именно они нам сейчас для этой задачи пригодятся.\r\n  // 2.5 Чтобы отследить, что пользователь скроллит страницу мы можем использовать события 'scroll'.\r\n  // 2.6 Здесь можно использовать как вариант ещё одно специальное свойство pageYOffset - оно даёт нам информацию сколько пикселей от верхней кромки страницы пользователь отмотал вниз. Вспомним также уже изученное ранее свойство scrollHeight, которое отдаёт нам полную высоту элемента с учётом прокрутки, которая осталась сверху.\r\n  // 2.7 Чтобы рассчитать момент, когда пользователь доскроллил до конца нам пригодится простая математическая формула: возьмём свойство, отвечающее за прокрутку сверху, возьмём также свойство, отвечающее за высоту клиента, видимой его части и сравним ей с scrollHeight, т.е. с высотой полной прокрутки и видимой высотой контента. Если два этих значения будут совпадать, то значит пользователь долистал до конца.\r\n  // ? В некоторых браузерах может появляться баг, когда даже при полном скролле вниз страницы не появляется модальное окно. Это можно решить отняв 1 пиксель. Тогда модальное окно точно сработает везде.\r\n  // 2.8 Но тот факт, что окно появляется снова и снова, если мы отскроллим вверх и вернёмся тоже не совсем то, что нам нужно. Поэтому доработаем этот скрипт добавив настройки в обработчик событий после запятой, после стрелочной функции.\r\n  // ? Объект со свойством \"once: true\" означает, что этот обработчик сработает лишь 1 раз до перезагрузки страницы. Однако такой подход у нас не сработает, потому, что мы повесили обработчик на window, а это значит, что события происходит каждый раз, когда мы крутим колёсиком мыши. Поэтому только мы чуточку проскроллим и это событие исчезнет, но знать о нём всё же стоит, даже если здесь оно нам не подойдёт.\r\n  // 2.9.1 Однако мы могли бы удалить обработчик события сразу после того, как он выполнился. Создадим специальную функцию для этого.\r\n  // 2.9.2 Теперь внутри этой функции, после открытия впервые модального окна, удаляем обработчик события. И в скобках removeEventListener указываем чётко, что было назначено до того. Какое событие и какую функцию.\r\n  // 2.9.3 Сейчас, если пользователь доскроллил до конца страницы и увидел один раз модальное окно, сколько бы он не скроллил вверх и вниз, модалка уже не появится.\r\n  const showModalByScroll = () => {\r\n    if (\r\n      window.pageYOffset + document.documentElement.clientHeight >=\r\n      document.documentElement.scrollHeight - 1\r\n    ) {\r\n      openingModal();\r\n      window.removeEventListener('scroll', showModalByScroll);\r\n    }\r\n  };\r\n\r\n  window.addEventListener('scroll', showModalByScroll);\r\n};\r\n\r\nexport default modalFunc;\r\n\r\n// |===:===:===:===>\r\n/** links:\r\n *  https://www.toptal.com/developers/keycode\r\n * */\r\n","const tabsFunc = () => {\r\n  // 1. Получим: 1) все элементы \"табы\" меню, 2) контент, который к ним относится 3) и всю обёртку для использования делегирования. (А то ведь могут после нас ещё какие-то элементы меню добавиться и это необходимо учесть сразу.)\r\n  const tabs = document.querySelectorAll('.tabheader__item'),\r\n    tabsContent = document.querySelectorAll('.tabcontent'),\r\n    tabsParent = document.querySelector('.tabcontainer');\r\n\r\n  // 2. Функция скрывающая все ненужные нам табы. Переберём наш псевдо-массив через forEach().\r\n  function hideTabContent() {\r\n    // 2.1.1 Скроем контент у всех табов:\r\n    // 2.1.2 Обратите внимание, что toggle() мы здесь использовать не можем, ибо начнётся неразбериха при переключении.\r\n    tabsContent.forEach((content) => {\r\n      content.classList.add('hide');\r\n      content.classList.remove('show', 'fade'); // не забудем также этот класс удалить, когда скрываем другие табы, чтобы в будущем эта анимация повторялась.\r\n    });\r\n\r\n    // 2.2 Уберём у всех табов модификатор класса \"_active\":\r\n    tabs.forEach((tab) => {\r\n      tab.classList.remove('tabheader__item_active');\r\n    });\r\n  }\r\n  // 3. Функция будет показывать нам контент таба, по которому кликнул юзер.\r\n  // 3.1.1 Здесь нужно понимать к какому элементу мы обращаемся и этот номер мы будем передавать в функцию как аргумент \"index\".\r\n  // 3.1.2 Т.к. логично показывать при загрузки страницы первый слайд, то стандартным значением укажем 0, т.е. первый элемент коллекции.\r\n  // 3.2 Не забудем добавить и класс активности.\r\n  function showTabContent(index = 0) {\r\n    tabsContent[index].classList.add('show', 'fade'); // при отображении также добавим анимацию fade, записанную в одноимённом классе.\r\n    tabsContent[index].classList.remove('hide');\r\n    tabs[index].classList.add('tabheader__item_active');\r\n  }\r\n\r\n  // 4.1 Итак, на родительский элемент нашего меню мы повесим обработчик событий, и сделаем так, что он будет распространятся по определённому условию на те его элементы, которые нам нужны.\r\n  // ? Если мы часто используем evt.target, то можно его определить в переменную для сокращения кода.\r\n  // 4.2 Запишем условие, что если есть evt.target, а также класс \"tabheader__item\", то будет происходить активация этого таба, т.е. показываться ему соответствующий контент.\r\n  // 4.3 Чтобы это осуществить нам требуется узнать номер этого таба. И в этом поможет нам перебор. Мы переберём все табы, что лежат в tabs и сравним их индексы с тем, по которому кликнул пользователь и покажем его соответственно на странице.\r\n  // 4.4\r\n  tabsParent.addEventListener('click', (evt) => {\r\n    const target = evt.target;\r\n\r\n    if (target && target.classList.contains('tabheader__item')) {\r\n      tabs.forEach((tab, index) => {\r\n        if (target == tab) {\r\n          hideTabContent();\r\n          showTabContent(index);\r\n        } // Если элемент по которому юзер кликнул и элемент из коллекции tabs совпадут, то мы вызываем две функции, но в функцию, что показывает контент передаём индекс, который таба, по которому кликнули.\r\n      });\r\n    }\r\n  });\r\n\r\n  hideTabContent();\r\n  showTabContent();\r\n};\r\n\r\nexport default tabsFunc;","'use strict';\r\n\r\nconst timerFunc = () => {\r\n  // 1. Создадим переменную для определения какого-то дэдлайна и установим какую-то дату в виде строки.\r\n  // ? Почему в виде строки? Да просто на практике очень часто такой функционал будет прикручен к админке, в которой менеджер или хозяин сайта сможет ввести дату, до которой должен считать наш таймер, а результат ввода будет выводится подобным значением и в виде строки.\r\n  const deadline = '2023-08-25';\r\n  // 2.1 Один из трёх столпов на котором будет держаться наш функционал это функция, которая будет определять разницу между дэдлайном и нашим текущим временем.\r\n  // 2.2 В параметр endTime будет попадать именно значение дэдлайна, но со строкой мы конечно не сможем проводить математические операции, поэтому переведём её в числа. Используем метод Date.parse(), в котором получим количество миллисекунд, а потом вычтем текущее время в миллисекундах, также с методом Date.parse().\r\n  // 2.3.1 Теперь эту разницу в миллисекундах нам требуется превращать в количество дней, часов, минут и секунд.\r\n  // 2.3.2 В случае с днями всё довольно просто, нам нужно количество миллисекунд в дэдлайне разделить на количество миллисекунд в 24 часах, а также нужно будет результат округлить с помощью Math.floor(). Это округление до ближайшего целого значения. Мы берём наш timestamp делим на произведение 1000 миллисекунд 60 и 60 и 24 (так мы получаем количество миллисекунд в сутках).\r\n  // 2.3.3 В случае с часами нам нужно разделить timestamps на количество миллисекунд в одном часе. И вот тут мы можем получить как подходящее количество часов (в пределах одних суток), так и например 100 или 1000 часов, что нам уже никак не подходит, ведь мы также считаем уже отдельно и дни. Поэтому здесь нам также понадобится модуль, оператор %, который делит что-то (в данном случае на 24) и получает остаток от деления.\r\n  // 2.3.4 По принципу вычисления часов также находим и минуты с секундами.\r\n  // 7 На случай, если наша дата \"просрочена\", т.е. раньше текущего числа, то нам следует выводить нули (или даже скрывать этот блок\\выводить сообщение, что акция закончена, в зависимости от ТЗ). Но пока реализуем нули. Итак, ещё на этапе высчитывания разницы миллисекунд и занесения значения в \"time\", мы можем сделать проверку на отрицательное значение. И если оно будет отрицательным, то мы просто возвращаем нули. Мы даже сэкономим ресурсы пользователю и не будем рассчитывать дальнейшие временные данные, связанные с этим основным числом.\r\n  const getTimeRemaining = (endTime) => {\r\n    let days, hours, minutes, seconds;\r\n    const time = Date.parse(endTime) - Date.parse(new Date());\r\n\r\n    if (time <= 0) {\r\n      // Тут мы можем вместо того, чтобы подставлять нули, например вывести какую-то вёрстку или убрать блок.\r\n      days = 0;\r\n      hours = 0;\r\n      minutes = 0;\r\n      seconds = 0;\r\n    } else {\r\n      (days = Math.floor(time / (1000 * 60 * 60 * 24))),\r\n        (hours = Math.floor((time / (1000 * 60 * 60)) % 24)),\r\n        (minutes = Math.floor((time / (1000 * 60)) % 60)),\r\n        (seconds = Math.floor((time / 1000) % 60));\r\n    }\r\n\r\n    // 2.4.1 Пока эти переменные существую только внутри этой функции и чтобы их вернуть в удобном виде наружу, чтобы как-то работать с полученными результатами, используем возвращение объекта.\r\n    // 2.4.2 Первым у нас будет возвращаться свойство \"total\" со значением равным общему количеству оставшихся миллисекунд. Оно нам также понадобится, т.к. нам нужно точно знать, вдруг у нас таймер закончился. Ведь если он закончился, то здесь будет отрицательное значение, т.к. количество миллисекунда в текущей дате будет больше, чем установленной в дэдлайне.\r\n    return {\r\n      total: time,\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    };\r\n  };\r\n  // 6 Чтобы у нас подставлялся 0 к значениям < 10, нам требуется проверить их на значение и подставим 0. И хотя мы тут число превращаем в строку, но в данном случае это роли никакой не играет, т.к. эту строчку мы поместим через textContent на страницу и ошибки не будет. Но теперь значение будет модифицировано, когда нам это необходимо. Для этого создадим небольшую функцию-помощника, которая будет этим заниматься.\r\n  const addZero = (num) => {\r\n    if (num >= 0 && num < 10) {\r\n      return `0${num}`;\r\n    } else {\r\n      return num;\r\n    }\r\n  };\r\n\r\n  // 3.1 Создадим функцию, которая будет заполнять вёрстку нашего таймера, основываясь на полученных из getTimeRemaining() данных. В атрибуты нам понадобится родительский элемент (\".timer\") и собственно дэдлайн, который мы будем в неё передавать.\r\n  // 3.2 Занесём в переменную timer родительский элемент таймера selector, чтобы в будущем можно создавать ещё какие-то таймеры на странице, сделаем эту функцию универсальной.\r\n  const setTimer = (selector, endTime) => {\r\n    const timer = document.querySelector(selector),\r\n      days = timer.querySelector('#days'),\r\n      hours = timer.querySelector('#hours'),\r\n      minutes = timer.querySelector('#minutes'),\r\n      seconds = timer.querySelector('#seconds');\r\n    // 4.1 Третья функция будет обновлять наш таймер каждую секунду.\r\n    // 4.2 Эта функция во-первых будет рассчитывать количество миллисекунд, которое осталось на текущий момент. (time)\r\n    // 4.3 Помещаем данные в вёрстку безопасным способом textContent. Для этого забираем данные из переменной time, в которую был записан результатом действий функции getTimeRemaining() объект с интересующими нас данными времени.\r\n    // 4.4 Ну и запускать эту функцию нам требуется каждую секунду. Для этого нам нужно создать переменную timeInterval и внесём в неё одноимённую конструкцию временного интервала, который будет запускать нужную нам функцию через 1 секунду.\r\n    // 4.5 Но теперь, коли есть интервал, то нужно будет его когда-нибудь остановить. Для этого запишем условие в updateTimer(), что если в объекте time, его свойстве \"total\" (оставшееся количество миллисекунд до дэдлайна) <= 0, то таймер остановится.\r\n    const updateTimer = () => {\r\n      const time = getTimeRemaining(endTime);\r\n\r\n      days.textContent = addZero(time.days);\r\n      hours.textContent = addZero(time.hours);\r\n      minutes.textContent = addZero(time.minutes);\r\n      seconds.textContent = addZero(time.seconds);\r\n\r\n      if (time.total <= 0) {\r\n        clearInterval(timeInterval);\r\n      }\r\n    };\r\n\r\n    // 5 Чтобы не таймер не перепрыгивал через секунду со значений вбитых по умолчанию в вёрстке, а сразу появлялся с нужными значениями, то следует вызвать функцию ещё до интервала.\r\n    updateTimer();\r\n\r\n    const timeInterval = setInterval(updateTimer, 1000);\r\n  };\r\n\r\n  getTimeRemaining();\r\n  setTimer('.timer', deadline);\r\n};\r\n\r\nexport default timerFunc;\r\n"],"sourceRoot":""}
