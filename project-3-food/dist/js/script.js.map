{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./src/js/modules/tabs.js","webpack:///./src/js/modules/timer.js"],"names":["tabsFunc","timerFunc","tabs","document","querySelectorAll","tabsContent","tabsParent","querySelector","hideTabContent","forEach","content","classList","add","remove","tab","showTabContent","index","addEventListener","evt","target","contains","deadline","getTimeRemaining","endTime","time","Date","parse","days","Math","floor","hours","minutes","seconds","total","addZero","num","setTimer","selector","timer","updateTimer","textContent","clearInterval","timeInterval","setInterval"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/main.js\");\n","import tabsFunc from './modules/tabs.js';\r\nimport timerFunc from './modules/timer.js';\r\n\r\ntabsFunc();\r\ntimerFunc();","const tabsFunc = () => {\r\n  // 1. Получим: 1) все элементы \"табы\" меню, 2) контент, который к ним относится 3) и всю обёртку для использования делегирования. (А то ведь могут после нас ещё какие-то элементы меню добавиться и это необходимо учесть сразу.)\r\n  const tabs = document.querySelectorAll('.tabheader__item'),\r\n    tabsContent = document.querySelectorAll('.tabcontent'),\r\n    tabsParent = document.querySelector('.tabcontainer');\r\n\r\n  // 2. Функция скрывающая все ненужные нам табы. Переберём наш псевдо-массив через forEach().\r\n  function hideTabContent() {\r\n    // 2.1.1 Скроем контент у всех табов:\r\n    // 2.1.2 Обратите внимание, что toggle() мы здесь использовать не можем, ибо начнётся неразбериха при переключении.\r\n    tabsContent.forEach((content) => {\r\n      content.classList.add('hide');\r\n      content.classList.remove('show', 'fade'); // не забудем также этот класс удалить, когда скрываем другие табы, чтобы в будущем эта анимация повторялась.\r\n    });\r\n\r\n    // 2.2 Уберём у всех табов модификатор класса \"_active\":\r\n    tabs.forEach((tab) => {\r\n      tab.classList.remove('tabheader__item_active');\r\n    });\r\n  }\r\n  // 3. Функция будет показывать нам контент таба, по которому кликнул юзер.\r\n  // 3.1.1 Здесь нужно понимать к какому элементу мы обращаемся и этот номер мы будем передавать в функцию как аргумент \"index\".\r\n  // 3.1.2 Т.к. логично показывать при загрузки страницы первый слайд, то стандартным значением укажем 0, т.е. первый элемент коллекции.\r\n  // 3.2 Не забудем добавить и класс активности.\r\n  function showTabContent(index = 0) {\r\n    tabsContent[index].classList.add('show', 'fade'); // при отображении также добавим анимацию fade, записанную в одноимённом классе.\r\n    tabsContent[index].classList.remove('hide');\r\n    tabs[index].classList.add('tabheader__item_active');\r\n  }\r\n\r\n  // 4.1 Итак, на родительский элемент нашего меню мы повесим обработчик событий, и сделаем так, что он будет распространятся по определённому условию на те его элементы, которые нам нужны.\r\n  // ? Если мы часто используем evt.target, то можно его определить в переменную для сокращения кода.\r\n  // 4.2 Запишем условие, что если есть evt.target, а также класс \"tabheader__item\", то будет происходить активация этого таба, т.е. показываться ему соответствующий контент.\r\n  // 4.3 Чтобы это осуществить нам требуется узнать номер этого таба. И в этом поможет нам перебор. Мы переберём все табы, что лежат в tabs и сравним их индексы с тем, по которому кликнул пользователь и покажем его соответственно на странице.\r\n  // 4.4\r\n  tabsParent.addEventListener('click', (evt) => {\r\n    const target = evt.target;\r\n\r\n    if (target && target.classList.contains('tabheader__item')) {\r\n      tabs.forEach((tab, index) => {\r\n        if (target == tab) {\r\n          hideTabContent();\r\n          showTabContent(index);\r\n        } // Если элемент по которому юзер кликнул и элемент из коллекции tabs совпадут, то мы вызываем две функции, но в функцию, что показывает контент передаём индекс, который таба, по которому кликнули.\r\n      });\r\n    }\r\n  });\r\n\r\n  hideTabContent();\r\n  showTabContent();\r\n};\r\n\r\nexport default tabsFunc;","'use strict';\r\n\r\nconst timerFunc = () => {\r\n  // 1. Создадим переменную для определения какого-то дэдлайна и установим какую-то дату в виде строки.\r\n  // ? Почему в виде строки? Да просто на практике очень часто такой функционал будет прикручен к админке, в которой менеджер или хозяин сайта сможет ввести дату, до которой должен считать наш таймер, а результат ввода будет выводится подобным значением и в виде строки.\r\n  const deadline = '2023-08-25';\r\n  // 2.1 Один из трёх столпов на котором будет держаться наш функционал это функция, которая будет определять разницу между дэдлайном и нашим текущим временем.\r\n  // 2.2 В параметр endTime будет попадать именно значение дэдлайна, но со строкой мы конечно не сможем проводить математические операции, поэтому переведём её в числа. Используем метод Date.parse(), в котором получим количество миллисекунд, а потом вычтем текущее время в миллисекундах, также с методом Date.parse().\r\n  // 2.3.1 Теперь эту разницу в миллисекундах нам требуется превращать в количество дней, часов, минут и секунд.\r\n  // 2.3.2 В случае с днями всё довольно просто, нам нужно количество миллисекунд в дэдлайне разделить на количество миллисекунд в 24 часах, а также нужно будет результат округлить с помощью Math.floor(). Это округление до ближайшего целого значения. Мы берём наш timestamp делим на произведение 1000 миллисекунд 60 и 60 и 24 (так мы получаем количество миллисекунд в сутках).\r\n  // 2.3.3 В случае с часами нам нужно разделить timestamps на количество миллисекунд в одном часе. И вот тут мы можем получить как подходящее количество часов (в пределах одних суток), так и например 100 или 1000 часов, что нам уже никак не подходит, ведь мы также считаем уже отдельно и дни. Поэтому здесь нам также понадобится модуль, оператор %, который делит что-то (в данном случае на 24) и получает остаток от деления.\r\n  // 2.3.4 По принципу вычисления часов также находим и минуты с секундами.\r\n  const getTimeRemaining = (endTime) => {\r\n    const time = Date.parse(endTime) - Date.parse(new Date()),\r\n      days = Math.floor(time / (1000 * 60 * 60 * 24)),\r\n      hours = Math.floor((time / (1000 * 60 * 60)) % 24),\r\n      minutes = Math.floor((time / (1000 * 60)) % 60),\r\n      seconds = Math.floor((time / 1000) % 60);\r\n    // 2.4.1 Пока эти переменные существую только внутри этой функции и чтобы их вернуть в удобном виде наружу, чтобы как-то работать с полученными результатами, используем возвращение объекта.\r\n    // 2.4.2 Первым у нас будет возвращаться свойство \"total\" со значением равным общему количеству оставшихся миллисекунд. Оно нам также понадобится, т.к. нам нужно точно знать, вдруг у нас таймер закончился. Ведь если он закончился, то здесь будет отрицательное значение, т.к. количество миллисекунда в текущей дате будет больше, чем установленной в дэдлайне.\r\n    return {\r\n      total: time,\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    };\r\n  };\r\n  // 6 Чтобы у нас подставлялся 0 к значениям < 10, нам требуется проверить их на значение и подставим 0. И хотя мы тут число превращаем в строку, но в данном случае это роли никакой не играет, т.к. эту строчку мы поместим через textContent на страницу и ошибки не будет. Но теперь значение будет модифицировано, когда нам это необходимо. Для этого создадим небольшую функцию-помощника, которая будет этим заниматься.\r\n  const addZero = (num) => {\r\n    if (num >= 0 && num < 10) {\r\n      return `0${num}`;\r\n    } else {\r\n      return num;\r\n    }\r\n  }\r\n\r\n  // 3.1 Создадим функцию, которая будет заполнять вёрстку нашего таймера, основываясь на полученных из getTimeRemaining() данных. В атрибуты нам понадобится родительский элемент (\".timer\") и собственно дэдлайн, который мы будем в неё передавать.\r\n  // 3.2 Занесём в переменную timer родительский элемент таймера selector, чтобы в будущем можно создавать ещё какие-то таймеры на странице, сделаем эту функцию универсальной.\r\n  const setTimer = (selector, endTime) => {\r\n    const timer = document.querySelector(selector),\r\n      days = timer.querySelector('#days'),\r\n      hours = timer.querySelector('#hours'),\r\n      minutes = timer.querySelector('#minutes'),\r\n      seconds = timer.querySelector('#seconds');\r\n    // 4.1 Третья функция будет обновлять наш таймер каждую секунду.\r\n    // 4.2 Эта функция во-первых будет рассчитывать количество миллисекунд, которое осталось на текущий момент. (time)\r\n    // 4.3 Помещаем данные в вёрстку безопасным способом textContent. Для этого забираем данные из переменной time, в которую был записан результатом действий функции getTimeRemaining() объект с интересующими нас данными времени.\r\n    // 4.4 Ну и запускать эту функцию нам требуется каждую секунду. Для этого нам нужно создать переменную timeInterval и внесём в неё одноимённую конструкцию временного интервала, который будет запускать нужную нам функцию через 1 секунду.\r\n    // 4.5 Но теперь, коли есть интервал, то нужно будет его когда-нибудь остановить. Для этого запишем условие в updateTimer(), что если в объекте time, его свойстве \"total\" (оставшееся количество миллисекунд до дэдлайна) <= 0, то таймер остановится.\r\n    const updateTimer = () => {\r\n      const time = getTimeRemaining(endTime);\r\n\r\n      days.textContent = addZero(time.days);\r\n      hours.textContent = addZero(time.hours);\r\n      minutes.textContent = addZero(time.minutes);\r\n      seconds.textContent = addZero(time.seconds);\r\n\r\n      if (time.total <= 0) {\r\n        clearInterval(timeInterval);\r\n      }\r\n    };\r\n\r\n    // 5 Чтобы не таймер не перепрыгивал через секунду со значений вбитых по умолчанию в вёрстке, а сразу появлялся с нужными значениями, то следует вызвать функцию ещё до интервала.\r\n    updateTimer();\r\n\r\n    const timeInterval = setInterval(updateTimer, 1000);\r\n  };\r\n\r\n  getTimeRemaining();\r\n  setTimer('.timer', deadline);\r\n};\r\n\r\nexport default timerFunc;\r\n"],"sourceRoot":""}