// 'use strict';

// * === Контекст вызова функции (ключевое слово this) === * \\
// ? Это то, что окружает функцию или в каких условиях она вызывается.
// Рассмотрим примеры из реального мира. Представьте скитающегося человека гражданина мира, что путешествует из страну в страну постоянно, в таком случае можно сказать, что этот человек функционирует в пределах всего мира, ведь у него нет какой-то привязки к определённому месту. Но если он где-то всё же остановится и "пустит корни" и будет там чем-то определённым заниматься, то можно уже говорить о контексте вызова. Теперь у него появилось определённое место для функционирования. С функциями в JS всё точно также.

// 1.0 Функция может вызываться 4-мя способами и в каждом из них контекст вызова будет отличаться:
// 1.1 Первый метод: просто вызов функции:
// ? Кстати в этом случае "this" будет вести себя по разному, в зависимости установлен режим "use strict" или нет.
function showThis() {
  console.log(this);
}
showThis();

// |===:===:===:===>
/** links:
 *  
 * */
