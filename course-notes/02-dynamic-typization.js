'use strict';

/** Объекты */
// * Массивы []
// * Функции function()
// * Объект Даты
// * Регулярные выражения
// * Ошибки

// JavaScript — это объектно-ориентированный язык, т.е. его главная структура это объекты.

const object = {
  name: 'Alex',
};

const array = [1, 2, 3, 7, 9];

/** Динамическая типизация (возможность одних типов данных превращаться в другой.) */
// Число может стать строкой, и строка может стать числом. А объект может стать вообще булевским значением.

// * == Превращение в строку ==

// 1) Самый старый и редко используемый способ — команда string.

console.log(typeof String(4)); // Этот метод уже больше для истории.

// 2) Сложение чего-то со строкой.

console.log('Hello' + 5);
console.log(typeof ('a' + 3));
console.log(typeof ('a' + false));

// Самый простой и часто используемый пример использования — формирование URL. (Хотя на самом деле более изящный и современный подход это использовать интерполяцию.)
const pageNum = 1;

console.log('https://google.com/catalogue/' + pageNum);
// Также можем получать какие-то картинки или формировать стили при помощи JS. Стили нам нужно будет передавать при виде строки.
const fontSize = 26 + 'px';

console.log(fontSize);

/** Преобразование в числа */

// 1) Так же как и в случае с методом String() почти уже не используемый.
console.log(typeof Number('5'));

// 2) Унарный плюс. (Знак +, который ставится перед другим типом данных.
console.log(typeof +'5');
console.log(5 + +'5');
// 3) Специальными методами, например parseInt(). (Первый аргумент сами данные, которые следует преобразовать, второй - система исчисления)
console.log(typeof parseInt('15px', 10));

const string = "200";

const number = parseInt(string, 16);

console.log(number);
/*
Применение этих навыков в реальности.
Всё, что мы получим от пользователя будет типом данных строка. Данные из например <input> или <textarea> в формах и т.д. Но иногда мы предполагаем, что пользователь введёт число.
*/

// Благодаря + перед prompt всё, что ни напишет пользователь, будет числом.
// let answer = +prompt("Hello?", "");

// * == Преобразование в логический (булевы) типы данных. ==
// Что всегда превращается в неправду, то бишь false?
// Однако не путать '' с ' ', с пробелом внутри будет true.
// 0, '', null, undefined, NaN;

// Применение
// 1 способ логического преобразования.
let switcher = null;

if (switcher) {
  console.log('it works!');
} // Так как переменная switcher в значении false, то и не выполняется.

switcher = 1;

if (switcher) {
  console.log('it works!');
} // А здесь переменная switcher в значении true, и успешно выполняется.

// Следующие 2 способа используются довольно редко.
// 2 способ логического преобразования.
console.log(typeof Boolean('5')); // Boolean() метод превращает любой тип данных в булевы\логический.

// 3 способ логического преобразования.
console.log(typeof !!'5');
