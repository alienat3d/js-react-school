'use strict';

const string = 'Test';
const array = [1, 2, 4, 6, 8];

// Свойство length покажет нам длину строки или например массива.
console.log(string.length);
console.log(array.length);

console.log(string);

// В то время, как у строки есть лишь одно свойство, то методом у неё большое множество, вот например один из популярных, приводит строчные буквы в заглавные. При этом исходник\референс не изменяется, просто мы получаем изменённое методом значение.
console.log(string.toUpperCase());

// Ещё один популярный метод строк, который действует противоположно предыдущему. Применяется часто для защиты от случайного ввода пользователем каких-то букв в верхнем регистре, которые могут помешать дальнейшей обработки информации.
console.log(string.toLowerCase());

// Позволяет найти кусочек строки и сообщить с какой позиции он начинается. Ещё это называют "поиск подстроки".
const sentence = 'I went to park to have midday walk.';

console.log(sentence.indexOf('park'));
// Кстати, если мы будем искать несуществующую часть строки, то нам выдаст -1, это значит, что подстрока не найдена. Запомним на будущее, может пригодится.
console.log(sentence.indexOf('queen'));

// А как же изменять исходные данные? Есть и такие методы, их три:
const greeting = 'Hello World!';

// Метод .slice() имеет два аргумента: 1) Номер индекса буквы, с которой мы бы хотели начать возвращаемый кусочек строки; 2) Номер индекса буквы, до которой нужно взять кусочек строки (исключая саму букву).
console.log(greeting.slice(6, greeting.length - 1));
// Второй вид использования метода slice(), если указать только один аргумент, то наша строка вырежется вся до конца.
console.log(greeting.slice(6));
// А третий вид использования вообще позволяет использовать отрицательные значения атрибутов. Тогда это значит, что отсчёт идёт с конца строки в начало.
console.log(greeting.slice(-6, -2));

// Следующий метод substring() также как и slice() принимает два аргумента и очень на него похож, но только не поддерживает отрицательные значения.
const queen = 'Екатерина';

console.log(queen.substring(1));

// И наконец substr() считается устаревшим, но знать про него всё равно стоит. Первый аргумент также означает номер индекса откуда будет начинаться подстрока. Второй аргумент однако отличается тем, что вместо обозначения где оканчивается подстрока, означает её длину, сколько символов нам необходимо вырезать.
const king = 'Алексей';

console.log(king.substr(1, 4));