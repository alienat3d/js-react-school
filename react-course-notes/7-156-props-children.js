// * === Вставка элементов через props.children (156) === * \\

// ? Часто при разработке бывает так, что есть одна обёртка компонента, но мы не знаем, что у неё будет внутри: сайдбар, футер, корзина товаров или что-то другое. А если этот компонент будет на разных страницах — то нам бы совсем не хотелось его каждый раз создавать. Ведь может случится, что понадобится сотня компонентов, отличающихся одним заголовком, например. Чтобы оптимизировать подобные случаи нам помогут эти приёмы. Это максимально полезно особенно в больших приложениях.

// todo 1 Для наглядных примеров и тестов перейдём в [projects\react-project-1\src\App.js]
// todo Также пример использования props.children в [projects\react-marvel-wiki\src\components\errorBoundary\ErrorBoundary.js]

// ? Также следует помнить, что мы можем работать и с массивом элементов, который передаётся как Children и к нему уже можно применить множество методов для работы с массивами, таких как map, forEach, count, only, toArray. И очень часто они работают в связке с методом cloneElement, который позволяет клонировать и возвращать новый реакт элемент.
// todo 2 Перейдём в [projects\react-project-1\src\App.js]

// ? Ещё одна разновидность вставки кода — передача компонентов в виде пропсов.
// todo 3 Перейдём в [projects\react-project-1\src\BootstrapTest.js]

// * Будет полезно попрактиковаться с этими двумя подходами. Подумать в каких компонентах моих приложений можно их использовать.

// |===:===:===:===>
/** links:
 *  (EN Свежая документация по React children): https://react.dev/reference/react/Children
*  (RU Документация по React children): https://ru.reactjs.org/docs/react-api.html#reactchildren
*  (RU Документация по методы React children): https://ru.reactjs.org/docs/react-api.html#reactchildren
*/