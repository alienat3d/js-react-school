// * === Предохранители [Error Boundaries] (153) === * \\

// * Итак, как мы знаем, когда у нас возникает ошибка реакт-приложения, то на странице появляется некий оверлей с описание ошибки. Такое происходит только во время работы в 'development mode', на продакшене реакт просто удалил бы весь интерфейс и оставил бы белый экран. Нам бы не слишком хотелось, чтобы такое случалось.
// ? Мы можем отслеживать подобные ситуации и как-то на них реагировать, например, чтобы ломался только тот компонент, который и вызвал ошибку. Тогда весь интерфейс бы остался, а только в этом компоненте появилась бы ошибка. В этом нам поможет хук componentDidCatch.

// ? Предохранители (Error Boundaries) — это обязательно классовые компоненты, которые оборачивают другие компоненты, и если в их дочерних компонентах происходит ошибка, то предохранители будут её ловить. При это приложение целиком ломаться не будет, а отрубится лишь этот компонент. А ещё мы можем дополнительно отрендерить какой-то запасной интерфейс вместо сломавшегося, а ошибку записать куда-то в логи.

// todo перейдём в [projects\react-marvel-wiki\src\components\charInfo\CharInfo.js]

// ? Однако предохранители ловят не все ошибки, а только те, что возникают при запуске метода render, в методах жизненного цикла и в constructor дочерних компонентов. Поэтому всё же необходимо также прописывать и методы для отлова ошибок.
/* //? А следующие ошибки они не ловят:
  1) которые произошли внутри обработчиков событий (ведь события происходят вне метода рендер, события могут произойти в любой момент и предохранитель не может знать когда её отлавливать);
  2) асинхронный код — логика такая же, мы не знаем когда эта операция закончится. Те же сетевые запросы относятся к этому типу. Именно поэтому у нас есть отдельный метод по отлову подобного типа ошибок;
  3) в самом предохранителе — ведь он ловит ошибки только в дочерних компонентах, а не внутри себя;
  4) серверный рендеринг (пока нам не интересен).
*/

// ? 2.0.0 Также есть специальный метод getDerivedStateFromError, который также используется в предохранителях наравне с componentDidCatch, но суть его в том, что он обновляет только лишь стейт.
//todo перейдём в [projects\react-marvel-wiki\src\components\errorBoundary\ErrorBoundary.js]

// |===:===:===:===>
/** links:
*  (RU Документация по componentDidCatch): https://ru.reactjs.org/docs/react-component.html#componentdidcatch
*  (EN Самая свежая документация по componentDidCatch): https://react.dev/reference/react/Component#componentdidcatch
*  (RU Документация по getDerivedStateFromError): https://ru.reactjs.org/docs/react-component.html#static-getderivedstatefromerror
*/
