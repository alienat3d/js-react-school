// * === CSSinJS. Стили в React Styled Components (143) === * \\

// ? "CSSinJS" технология, это использование CSS-кода прямо внутри JS-компонентов. Это довольно популярный подход, активно используется, поэтому важно его рассмотреть.

// todo Потренируемся на самом первом тестовом Реакт-проекте [projects\react-project-1\src\App.js]

// ? Установка Styled Components {npm install styled-components --save}

// ? Если стилизовать так каждый компонент, то и CSS-классы по факту не понадобятся. И можно создать файл с готовым набором компонентов, который будем экспортировать и использовать в других частях приложения.
// Так часто делают с какими-то заголовками, кнопками, карточками товаров и прочим.
// ? Из плюсов такого подхода:
// ? 1) Инкапсуляция стилей, теперь нету пересечений, потому, что даже названия классов генерируются случайным образом;
// ? 2) Не нужно использовать методики по типу BEM;
// ? 3) Использование пропсов и условий, это может быть очень удобно в определённых ситуациях;
// ? 4) Префиксы ставятся автоматически.
// Из минусов подхода:
// 1) Приходится привыкать к такому необычному подходу вёрстки;
// 2) Если подряд записывать много стилизованных компонентов, то можно запутаться где какой тег находится.
// 3) Все условия, что находятся в Styled Components можно реализовать и стилями.
// 4) Названия стилей становятся кашей из случайных букв и цифр (это усложняет отладку в Dev Tools).
// 5) Если CSS становится частью JS, то отдельно закэшировать мы уже их не сможем. Тут идёт всегда всё вместе.
// 6) Если где-то ошибиться, то всё приложение рухнет.

// |===:===:===:===>
/** links:
*  (Styled Components): https://styled-components.com/
*  (Tagged templates): https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates
*/
