// * === Render props паттерн (158) === * \\

// ? Это не совсем обычный подход, но может встретится в практике. Мы уже прошли, что при помощи props.children можно помещать элементы в компонент динамически. Т.е. управлять из-вне, но можно пойти и дальше — из-вне компонента вызывать его рендер. Т.е. либо метод рендер в классовом компонента, либо его return, либо какие-то части. И сделать это можно также в пропсах.

// ? Что означает рендер пропсы? В пропсы компонента передаётся что-то, что будет рендерить какую-то структуру внутри компонента.

// todo 1 Для наглядности перейдём в [projects\react-project-1\src\App.js]


// ? 1.0.14 Чаще всего такой подход будет встроен в другие библиотеки, которые мы присоединяем к реакту. Мы ещё со многими поработаем в курсе, но сперва представим, что у нас есть многостраничное приложение и для разделения на страницы используется специальный компонент <Page/>. Этот компонент совершенно не знает какой контент будет в себе содержать. Тем более страниц много с разным содержанием. Этот Page будет много раз вызываться с разным содержимым. И в таком случае главный компонент со структурой страницы будет всегда один - Page. Это шаблон страницы, который, от страницы к странице, будет содержать в себе разный контент, с разными стейтами и функциями. Для подобной задачи отлично подойдёт render props, который позволит для разной страницы рендерить разный набор элементов и компонентов.
// ? 1.0.15 Причём, если в props.children мы передаём только содержимое — элементы и компоненты, то здесь мы передаём именно функцию. И она позволяет не только рендерить что-то, но и использовать внутренности компонента. Как это было в Counter, где мы передавали стейт counter.

// ? В props.children передаются готовые компоненты или элементы, а в props.render мы передаём функцию, которая будет что-то рендерить и в неё можно также передать какие-то аргументы, а аргументы берутся из родительского компонента.

// ? Принять к сведению: если компонент не знает что в нём будет находится, то используем либо props.children, либо props.render. Так мы значительно сократим и количество кода и компонентов.

// |===:===:===:===>
/** links:
 * (Ru Документация по render props): https://ru.reactjs.org/docs/render-props.html
*/