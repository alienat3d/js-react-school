import React, { Component } from 'react';
import styled from 'styled-components';

import BootstrapTest from '../BootstrapTest';

import './App.css';

// ?[157]

const EmpItem = styled.div`
  margin-bottom: 15px;
  border-radius: 5px;
  padding: 20px;
  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);
  a {
    display: block;
    margin: 10px 0 10px 0;
    color: ${props => props.active ? 'orange' : 'navy'};
    &:hover {
      color: yellowgreen;
    }
  }
  input {
    display: block;
    margin-top: 10px;
  }
`;
const Header = styled.h2`
  font-size: 25px;
`;
const SubHeader = styled.h3`
  font-size: 22px;
`;
export const Button = styled.button`
  margin: 0 auto 10px;
  display: block;
  border-radius: 50%;
  padding: 0;
  background-color: gold;
  border: 1px solid rgba(0, 0, 0, 0.2);
  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);
`;

class WhoAmI extends Component {
  constructor(props) {
    super(props);
    this.state = {
      age: 37,
      imgUrl: './img/plus.svg',
      occupation: ''
    }
  }
  nextYear = () => {
    this.setState(state => ({
      age: state.age + 1
    }));
  }
  commitInputChanges = (evt, color) => {
    console.log(color);
    this.setState({
      occupation: evt.target.value
    })
  }
  render() {
    const { name, surname, link } = this.props;
    const { age, occupation, imgUrl } = this.state;
    return (
      <EmpItem active>
        <Button onClick={this.nextYear}>
          <img className='btn-icon' src={imgUrl} alt="" />
          {this.state.text}
        </Button>
        <Header>My name is {name} {surname}. I‚Äôm {age} years old.</Header>
        <SubHeader>My occupation is {occupation}.</SubHeader>
        <a href={link}>My LinkedIn Profile</a>
        <form>
          <label htmlFor="occupation">
            Type your occupation
            <input
              type='text'
              id='occupation'
              onChange={(evt) => this.commitInputChanges(evt, 'some color')} />
          </label>
        </form>
      </EmpItem>
    )
  };
}
const Wrapper = styled.div`
  margin: 80px auto 0 auto;
  width: 600px;
`;

const DynamicGreeting = (props) => {
  return (
    <div className={'mb-3 p-3 border border-' + props.color}>
      {
        React.Children.map(props.children, child => {
          return React.cloneElement(child, { className: 'shadow p-3 m-3 border rounded' })
        })
      }
      {/* {props.children} */}
    </div>
  )
}

// * 1.0.0 –ù–∞–ø–∏—à–µ–º –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä. –°–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç HelloGreeting –∏ —É –Ω–µ–≥–æ –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ —Å—Ç–∏–ª–∏. –ò –ø–æ —Å–≤–æ–µ–π —Å—É—Ç–∏ —ç—Ç–æ —á–∞—Å—Ç–Ω—ã–π —Å–ª—É—á–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ DynamicGreeting.
// ? ¬´–ö–æ–º–ø–æ–∑–∏—Ü–∏—è¬ª (–∏–ª–∏ ¬´—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è¬ª) ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ –º—ã —Å–æ–≤–º–µ—â–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –¥–∞—ë–º –∏–º –Ω–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –≤–∏–¥ –Ω–∞ –±–∞–∑–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö (–∫–∞–∫ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ HelloGreeting). –¢.–µ. –º—ã –¥–µ–ª–∞–µ–º –∫–∞–∫–æ–π-—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º. –ù–∞–ø—Ä–∏–º–µ—Ä –∑–¥–µ—Å—å –º—ã —Å–¥–µ–ª–∞–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç HelloGreeting, –Ω–∞ –±–∞–∑–µ –¥—Ä—É–≥–æ–≥–æ DynamicGreeting –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ò –æ–¥–∏–Ω –∏–∑ –≥–ª–∞–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ —ç—Ç–æ –ø—Ä–æ–ø—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü–∏—é –∫–∞–∫ –Ω–∞–º –≤–∑–¥—É–º–∞–µ—Ç—Å—è. (–¢–æ—Ç –∂–µ props.children –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.) –ò –≤ —Ü–µ–ª–æ–º –º—ã –º–æ–∂–µ–º –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ª—é–±—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ return. –ü–æ—ç—Ç–æ–º—É –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–¥–µ—Å—å –Ω–µ –Ω—É–∂–Ω–æ.
const HelloGreeting = (props) => {
  return (
    <div style={{ 'width': '600px', 'margin': '0 auto' }}>
      <DynamicGreeting color={'danger'}>
        <h1>Hi, {props.name} ü•∑!</h1>
      </DynamicGreeting>
    </div>
  )
}
// 1.0.1 –í–æ–∑—å–º—ë–º –µ–≥–æ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É—Ç.
// ? 1.0.2 –ü—Ä–∏—á—ë–º –æ–±–∞ —ç—Ç–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (HelloGreeting & DynamicGreeting) –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –Ω–∞ –∫–ª–∞—Å—Å–æ–≤—ã–µ –∏ –æ–Ω–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.
// ? 1.0.3 –û–¥–Ω–∞–∫–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –º—ã –∑–¥–µ—Å—å –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ–º, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –Ω–∞—Ç–∏–≤–Ω–æ–º JS (–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –Ω—ë–º). –î–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ –≤ React –≤ 99.9% —Å–ª—É—á–∞–µ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–ø—Å—ã.
function App() {
  return (
    <Wrapper>
      <HelloGreeting name='Jack JS-Samurai' />
      <BootstrapTest
        left={
          <DynamicGreeting color={'primary'}>
            <h2>Hello world!</h2>
            <h3>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Natus asperiores totam fuga ut culpa placeat.</h3>
          </DynamicGreeting>
        }
        right={
          <DynamicGreeting color={'secondary'}>
            <h2>Hello underworld!</h2>
            <p>Lorem ipsum.</p>
          </DynamicGreeting>
        }
      />

      <WhoAmI name='Al' surname='Tsaplin' link='https://www.linkedin.com/in/altdev/' />
      <WhoAmI name='Andrey' surname='Teplonogov' link='https://www.linkedin.com/in/antepliy/' />
    </Wrapper >
  );
}

export default App;